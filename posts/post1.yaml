heading: Let's talk Docker 🐋
date: December 11, 2023
description: According to Wikipedia, "Docker is a tool used to automate the deployment of applications in lightweight containers. This allows applications to operate efficiently in various environments, isolated from one another."

-----

#What is Docker?
>According to Wikipedia, "Docker is a tool used to automate the deployment of applications in lightweight containers. This allows applications to operate efficiently in various environments, isolated from one another."
###Breaking it down:
Imagine you're back in your college classroom, and the professor has assigned you to work on a group coding project with three team members. One uses a Windows laptop, another uses macOS, and the third uses a Linux-based laptop. Your task is to build a simple todo application. As you start the project (at the last minute 😜), you realize that the application running on your Windows OS isn't functioning on the other operating systems. Panic sets in as you suspect a bug in your code. After spending a considerable amount of time debugging, you're left scratching your head.
Eventually, your team discovers that the issue lies not in the code but in the different environments the application is trying to run on.
In simpler terms, Docker aims to solve this problem by providing containers, enabling the application to run seamlessly on different environments without encountering errors.
###But what is a container?
###Before we get into understanding what a container is, we will need to understand what an image is?
##What are images?
Well let's get back to our old friend, Wikipedia
>According to Wikipedia, "A Docker image is a read-only template used to build containers."

To understand this let's go from the classroom to your kitchen and yes you're the one who'll be cooking. You're craving your favorite dish, and pull up a recipe for that dish. You go to the grocery store, bring all the required items on the list to be able to make the dish, after that you gather all the utensils you'll need and voila you've all the things you need to be able to cook it. You take a snapshot of this and whenever you crave your favorite dish you just pull up this snapshot and you're ready to go.
This is what an image is only replacing the grocery items and the utensils for cooking your dish with all dependencies, configurations, scripts, binaries, etc required for running the application. The image also contains other configurations for the container, such as environment variables, a default command to run, and other metadata.
Now finally let's understand what a container is?
##What is a container?
>Our dear friend wikipedia says, "A Docker container is a standardized, encapsulated environment that runs applications.A container is managed using the Docker API or CLI. It is a process created from an image"

So, continuing with our kitchen analogy, a container is akin to the actual process of cooking that dish in your kitchen. It's a self-contained unit that includes the application and all its dependencies, isolated from the environment it runs in. The container is created from an image, is a runnable instance of an image and can be managed using Docker commands or the Docker API. Essentially, it provides a consistent and reproducible environment for your application to run, regardless of the underlying system.

Disclaimer: The following insights are based on my understanding of the topic, and I encourage readers to verify information independently. Docker, containers, and related concepts are dynamic fields, and my perspective may not capture the entirety of their complexity. Feel free to share your thoughts and correct any inaccuracies, fostering a collaborative learning environment. 

Let's delve into the fascinating world of Docker together! 🚀

In my next article, I'll be talking about how to get started with Docker !

###References
- https://docs.docker.com/get-started/
- https://docs.docker.com/get-started/overview/
- https://en.wikipedia.org/wiki/Docker_(software)